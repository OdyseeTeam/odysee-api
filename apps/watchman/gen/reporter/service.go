// Code generated by goa v3.5.2, DO NOT EDIT.
//
// reporter service
//
// Command:
// $ goa gen github.com/OdyseeTeam/odysee-api/apps/watchman/design -o apps/watchman

package reporter

import (
	"context"
)

// Media playback reports
type Service interface {
	// Add implements add.
	Add(context.Context, *PlaybackReport) (err error)
	// Healthz implements healthz.
	Healthz(context.Context) (res string, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "reporter"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"add", "healthz"}

// PlaybackReport is the payload type of the reporter service add method.
type PlaybackReport struct {
	// LBRY URL (lbry://... without the protocol part)
	URL string
	// Duration of time between event calls in ms (aiming for between 5s and 30s so
	// generally 5000–30000)
	Duration int32
	// Current playback report stream position, ms
	Position int32
	// Relative stream position, pct, 0—100
	RelPosition int32
	// Rebuffering events count during the interval
	RebufCount int32
	// Sum of total rebuffering events duration in the interval, ms
	RebufDuration int32
	// Standard binary stream (`stb`), HLS (`hls`) or live stream (`lvs`)
	Protocol string
	// Cache status of video
	Cache *string
	// Player server name
	Player string
	// User ID
	UserID string
	// Client bandwidth, bit/s
	Bandwidth *int32
	// Media bitrate, bit/s
	Bitrate *int32
	// Client device
	Device string
}

// MultiFieldError is the error returned when several fields failed a
// validation rule.
type MultiFieldError struct {
	Message string
}

// Error returns an error description.
func (e *MultiFieldError) Error() string {
	return "MultiFieldError is the error returned when several fields failed a validation rule."
}

// ErrorName returns "MultiFieldError".
func (e *MultiFieldError) ErrorName() string {
	return "multi_field_error"
}
