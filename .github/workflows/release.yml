name: Release

on:
  workflow_run:
    workflows: ["Test"]
    branches:
      - master
      - dev
    types: ["completed"]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev'
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      GOROOT: /usr/local/go
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - run: git branch

      - name: Retrieve release details
        id: release
        run: |
          echo "::set-output name=service::$(git describe --tags|sed -e 's/\-v.*//')"
          echo "::set-output name=version::$(git describe --tags|sed -e 's/.*\-v//')"

      - name: Release details
        run: |
            echo "::group::${{ steps.release.outputs.app }}"
            echo "version ${{ steps.release.outputs.version }"
            echo "env ${{ github.ref }}"
            echo "::endgroup::"

      - name: Set up Go 1.17
        uses: actions/setup-go@v3
        with:
          go-version: '>=1.17 <1.18'
        id: go

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # odysee-api deployment

      - name: Build odysee-api
        if: steps.release.outputs.app == 'api'
        run: make api

      - name: Build and push odysee-api docker image
        if: steps.release.outputs.app == 'api'
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          tags: |
            odyseeteam/odysee-${{ steps.release.outputs.app }}:latest
            odyseeteam/odysee-${{ steps.release.outputs.app }}:${{ steps.release.outputs.version }}

      - name: Deploy odysee-api
        if: steps.release.outputs.app == 'api'
        uses: octokit/request-action@v2.x
        id: deploy-odysee-api
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_REPO_TOKEN }}
        with:
          route: POST /repos/:repository/dispatches
          repository: odyseeteam/misc-deployment
          event_type: deploy-odysee
          client_payload: |
            tag: ${{ steps.release.outputs.version }}
            ref: ${{ github.ref }}
            service: odysee-api

      # Watchman deployment

      - name: Build watchman
        if: steps.release.outputs.app == 'watchman'
        run: make watchman

      - name: Build watchman docker image
        if: steps.release.outputs.app == 'watchman'
        uses: docker/build-push-action@v2
        with:
          push: true
          context: apps/${{ steps.release.outputs.app }}/
          tags: |
            odyseeteam/${{ steps.release.outputs.app }}:latest
            odyseeteam/${{ steps.release.outputs.app }}:${{ steps.release.outputs.version }}
          file: apps/${{ steps.release.outputs.app }}/Dockerfile

      - name: Deploy watchman
        if: steps.release.outputs.app == 'watchman'
        uses: octokit/request-action@v2.x
        id: deploy-watchman
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOYMENT_REPO_TOKEN }}
        with:
          route: POST /repos/:repository/dispatches
          repository: lbryio/lbrytv-deployment
          event_type: deploy-odysee
          client_payload: |
            tag: ${{ steps.release.outputs.version }}
            ref: ${{ github.ref }}
            service: ${{ steps.release.outputs.app }}
